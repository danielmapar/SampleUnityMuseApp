// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from museinfo.djinni

#import <Foundation/Foundation.h>
@class IXNMuseVersion;


/**
 * Provides access to Muse firmware and hardware versions.<br>
 *
 * You must connect to the headband at least once to before this information
 * is available.  Once you have connected once the information will remain
 * available, even after you disconnect.
 */
@interface IXNMuseVersion : NSObject

/** Internal use only.  Create a default version. */
+ (nullable IXNMuseVersion *)makeDefaultVersion;

/** Internal use only.  Create version from JSON string \muse2016 only. */
+ (nullable IXNMuseVersion *)makeVersion:(nonnull NSString *)json;

/**
 * Provides access to the running state.
 * \li For \muse2014 this is one of \c app, \c bootloader or \c test.
 * \li For \muse2016 this is one of \c headband or \c bootloader.
 * \return The current running state of the headband.
 */
- (nonnull NSString *)getRunningState;

/**
 * Provides access to hardware version.
 * \return The hardware version.
 */
- (nonnull NSString *)getHardwareVersion;

/**
 * BSP (board support package) version.
 * This is only available on \muse2016.
 * \return The BSP version.
 */
- (nonnull NSString *)getBspVersion;

/**
 * Provides access to the firmware version.
 * \return The firmware version.
 */
- (nonnull NSString *)getFirmwareVersion;

/**
 * Provides access to Muse bootloader version.
 * \return The bootloader version.
 */
- (nonnull NSString *)getBootloaderVersion;

/**
 * Provides access to Muse firmware build number.
 * This is only available on \muse2014.
 * \return The firmware build number.
 */
- (nonnull NSString *)getFirmwareBuildNumber;

/**
 * Type of firmware.  One of \c consumer, \c research or \c test.
 * \return The type of firmware.
 */
- (nonnull NSString *)getFirmwareType;

/**
 * Provides access to %Muse communication protocol version.
 * \return The communication protocol version.
 */
- (int32_t)getProtocolVersion;

@end
