// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from sdk_bridge.djinni

#import "Muse/api/IXNMuseDataPacketType.h"
#import "Muse/api/IXNMuseModel.h"
#import "Muse/api/IXNReaderMusePlaybackSettings.h"
#import <Foundation/Foundation.h>
@class IXNMuseFileReader;
@class IXNReaderMuse;
@class IXNReaderMuseBuilder;
@protocol IXNEventLoop;


/**
 * Builds a \classlink{ReaderMuse} that plays back the packets in the given
 * \classlink{MuseFileReader}.
 *
 * It exposes a way to set the configuration with chainable method calls, e.g.:
 * \if WINDOWS_ONLY
 * \code
 *     auto reader_muse = ReaderMuseBuilder::get()
 *         ->with_packet_types(my_packet_types)
 *         ->with_model(my_model)
 *         ->build(my_reader);
 * \endcode
 * \elseif ANDROID_ONLY
 * \code
 *     ReaderMuse muse = ReaderMuseBuilder.get()
 *         .withPacketTypes(myPacketTypes)
 *         .build(myMuseFileReader);
 * \endcode
 * \elseif IOS_ONLY
 * \code
 *     IXNReaderMuse *muse = [[[ReaderMuseBuilder get]
 *         withPacketTypes: myPacketTypes]
 *         build: myMuseFileReader];
 * \endcode
 * \else
 * MISSING_DOCUMENTATION
 * \endif
 */
@interface IXNReaderMuseBuilder : NSObject

/**
 * Returns a reference to a \classlink{ReaderMuseBuilder}
 *
 * \return A reference to a \classlink{ReaderMuseBuilder}
 */
+ (nullable IXNReaderMuseBuilder *)get;

/**
 * The set of packet types to pass through from the file.
 *
 * The default set contains the following all packet types in
 * \classlink{MuseDataPacketType}.
 * <br>
 *
 * The eventual set used is computed by the
 * last call to \inlinelink{withPacketTypes(),IXNReaderMuseBuilder::withPacketTypes:,with_packet_types()}
 *  minus the last call to \inlinelink{skipPacketTypes(),IXNReaderMuseBuilder::skipPacketTypes:,skip_packet_types()}
 *
 * \param types The set of packet types to read.
 * \return A reference to the same \classlink{ReaderMuseBuilder}
 */
- (nullable IXNReaderMuseBuilder *)withPacketTypes:(nonnull NSSet<NSNumber *> *)types;

/**
 * The set of packet types to explicitly ignore in the file.
 *
 * The default is the empty set.
 * <br>
 *
 * The eventual set used is computed by the
 * last call to \inlinelink{withPacketTypes(),IXNReaderMuseBuilder::withPacketTypes:,with_packet_types()}
 *  minus the last call to \inlinelink{skipPacketTypes(),IXNReaderMuseBuilder::skipPacketTypes:,skip_packet_types()}
 *
 * \param types The set of packet types to skip.
 * \return A reference to the same \classlink{ReaderMuseBuilder}
 */
- (nullable IXNReaderMuseBuilder *)skipPacketTypes:(nonnull NSSet<NSNumber *> *)types;

/**
 * The model that this Muse should say it is.
 *
 * The default is \muse2014.
 * \param model The model to use.
 * \return A reference to the same \classlink{ReaderMuseBuilder}
 */
- (nullable IXNReaderMuseBuilder *)withModel:(IXNMuseModel)model;

/**
 * The playback settings to use with playing back the file.
 *
 * The default is
 * \enumlink{ReaderMusePlaybackSettings,AS_FAST_AS_POSSIBLE_WITH_SAVED_TIMESTAMP,IXNReaderMusePlaybackSettingsAsFastAsPossibleWithSavedTimestamp}
 *
 * \param settings The playback settings to use.
 *
 * \return A reference to the same \classlink{ReaderMuseBuilder}
 */
- (nullable IXNReaderMuseBuilder *)withPlaybackSettings:(IXNReaderMusePlaybackSettings)settings;

/**
 * The \classlink{EventLoop} to use to handle simulated playback.
 *
 * The default is a null pointer (no event loop).
 *
 * \param loop The \classlink{EventLoop} to use.
 *
 * \return A reference to the same \classlink{ReaderMuseBuilder}
 */
- (nullable IXNReaderMuseBuilder *)withEventLoop:(nullable id<IXNEventLoop>)loop;

/**
 * Construct a \classlink{ReaderMuse}
 *
 * \param reader The \classlink{MuseFileReader} to use to read the file.
 * \return A \classlink{ReaderMuse} configured with the parameters that were set.
 */
- (nullable IXNReaderMuse *)build:(nullable IXNMuseFileReader *)reader;

/**
 * Construct a \classlink{ReaderMuse}
 * \param reader The \classlink{MuseFileReader} to use to read the file.
 *
 * \if ANDROID_ONLY
 * \param asyncLoop The EventLoop to use for the call to Muse::runAsynchronously()
 * \elseif IOS_ONLY
 * \param asyncLoop The IXNEventLoop to use for the call to ::IXNMuse::runAsynchronously:
 * \elseif WINDOWS_ONLY
 * \param async_loop The EventLoop to use for the call to Muse::run_asynchronously()
 * \else
 * MISSING_DOCUMENTATION
 * \endif
 * \return A \classlink{ReaderMuse} configured with the parameters that were set.
 *
 * \deprecated Set the \classlink{EventLoop} with
 * \functionlink{ReaderMuseBuilder,withEventLoop,with_event_loop}
 * and then call \functionlink{ReaderMuseBuilder,build,build}
 * instead.
 */
- (nullable IXNReaderMuse *)buildWithAsync:(nullable IXNMuseFileReader *)reader
                                 asyncLoop:(nullable id<IXNEventLoop>)asyncLoop;

@end
